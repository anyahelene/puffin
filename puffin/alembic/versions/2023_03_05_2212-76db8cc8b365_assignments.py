"""assignments

Revision ID: 76db8cc8b365
Revises: 4244e0173be3
Create Date: 2023-03-05 22:12:36.928355

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '76db8cc8b365'
down_revision = '4244e0173be3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('assignment_model', sa.Enum('GITLAB_STUDENT_FORK', 'GITLAB_GROUP_FORK', 'GITLAB_GROUP_PROJECT', 'GITLAB_STUDENT_PROJECT', name='assignmentmodel'), nullable=False),
    sa.Column('gitlab_id', sa.Integer(), nullable=True),
    sa.Column('gitlab_root_id', sa.Integer(), nullable=True),
    sa.Column('gitlab_test_id', sa.Integer(), nullable=True),
    sa.Column('canvas_id', sa.String(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('grade_by_date', sa.DateTime(), nullable=True),
    sa.Column('json_data', sa.JSON(), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_assignment_course_id_course')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assignment')),
    sa.UniqueConstraint('canvas_id', name=op.f('uq_assignment_canvas_id')),
    sa.UniqueConstraint('slug', 'course_id', name=op.f('uq_assignment_slug'))
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('namespace_slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('owner_kind', sa.String(), nullable=False),
    sa.Column('gitlab_id', sa.String(), nullable=True),
    sa.Column('submitted_ref', sa.String(), nullable=True),
    sa.Column('json_data', sa.JSON(), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_project_course_id_course')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project')),
    sa.UniqueConstraint('gitlab_id', name=op.f('uq_project_gitlab_id')),
    sa.UniqueConstraint('slug', 'namespace_slug', name=op.f('uq_project_slug'))
    )
    op.create_table('project_test_run',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('compile_passed', sa.Boolean(), nullable=False),
    sa.Column('test_passed', sa.Boolean(), nullable=False),
    sa.Column('result_points', sa.Integer(), nullable=False),
    sa.Column('result_text', sa.String(), nullable=True),
    sa.Column('result_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_project_test_run_project_id_project')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_test_run'))
    )
    op.create_table('student_assignment',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('canvas_id', sa.String(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('json_data', sa.JSON(), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], name=op.f('fk_student_assignment_assignment_id_assignment')),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_student_assignment_project_id_project')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_student_assignment_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_student_assignment')),
    sa.UniqueConstraint('canvas_id', name=op.f('uq_student_assignment_canvas_id')),
    sa.UniqueConstraint('user_id', 'assignment_id', name=op.f('uq_student_assignment_user_id'))
    )
    op.create_table('grader',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('grader_id', sa.Integer(), nullable=False),
    sa.Column('student_assignment_id', sa.Integer(), nullable=False),
    sa.Column('grade_by_date', sa.DateTime(), nullable=True),
    sa.Column('graded_date', sa.DateTime(), nullable=True),
    sa.Column('grade_points', sa.Integer(), nullable=True),
    sa.Column('grade_report', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grader_id'], ['user.id'], name=op.f('fk_grader_grader_id_user')),
    sa.ForeignKeyConstraint(['student_assignment_id'], ['student_assignment.id'], name=op.f('fk_grader_student_assignment_id_student_assignment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_grader')),
    sa.UniqueConstraint('grader_id', 'student_assignment_id', name=op.f('uq_grader_grader_id'))
    )
    op.add_column('account', sa.Column('email_verified', sa.Boolean(), server_default=sa.text('(FALSE)'), nullable=False))
    op.add_column('account', sa.Column('last_login', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('account', 'last_login')
    op.drop_column('account', 'email_verified')
    op.drop_table('grader')
    op.drop_table('student_assignment')
    op.drop_table('project_test_run')
    op.drop_table('project')
    op.drop_table('assignment')
    # ### end Alembic commands ###
