"""initial

Revision ID: 4244e0173be3
Revises: 
Create Date: 2023-02-27 21:01:25.034962

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4244e0173be3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('old_data', sa.JSON(), nullable=True),
    sa.Column('new_data', sa.JSON(), nullable=True),
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('row_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('UPDATE', 'INSERT', 'DELETE', name='logtype'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_log'))
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course')),
    sa.UniqueConstraint('external_id', name=op.f('uq_course_external_id'))
    )
    op.create_table('id',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_id'))
    )
    op.create_table('last_sync',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('obj_id', sa.Integer(), nullable=False),
    sa.Column('obj_type', sa.String(), nullable=False),
    sa.Column('sync_incoming', sa.DateTime(), nullable=True),
    sa.Column('sync_outgoing', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_last_sync')),
    sa.UniqueConstraint('obj_id', 'obj_type', name=op.f('uq_last_sync_obj_id'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('(FALSE)'), nullable=False),
    sa.Column('locale', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('key', name=op.f('uq_user_key'))
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('provider_name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('fullname', sa.String(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_account_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_account')),
    sa.UniqueConstraint('external_id', name=op.f('uq_account_external_id')),
    sa.UniqueConstraint('username', name=op.f('uq_account_username'))
    )
    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_enrollment_course_id_course')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_enrollment_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_enrollment')),
    sa.UniqueConstraint('user_id', 'course_id', name=op.f('uq_enrollment_user_id'))
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('kind', sa.String(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('join_model', sa.Enum('RESTRICTED', 'OPEN', 'AUTO', 'CLOSED', name='joinmodel'), nullable=False),
    sa.Column('join_source', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_group_course_id_course')),
    sa.ForeignKeyConstraint(['parent_id'], ['group.id'], name=op.f('fk_group_parent_id_group')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_group')),
    sa.UniqueConstraint('course_id', 'slug', name=op.f('uq_group_course_id')),
    sa.UniqueConstraint('external_id', name=op.f('uq_group_external_id'))
    )
    op.create_table('oauth1token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.String(), nullable=False),
    sa.Column('oauth_token', sa.String(), nullable=False),
    sa.Column('oauth_token_secret', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_oauth1token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth1token')),
    sa.UniqueConstraint('provider_name', 'user_id', name=op.f('uq_oauth1token_provider_name'))
    )
    op.create_table('oauth2token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.String(), nullable=False),
    sa.Column('token_type', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_oauth2token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth2token')),
    sa.UniqueConstraint('provider_name', 'user_id', name=op.f('uq_oauth2token_provider_name'))
    )
    op.create_table('membership',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('join_model', sa.Enum('RESTRICTED', 'OPEN', 'AUTO', 'CLOSED', name='joinmodel'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_membership_group_id_group')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_membership_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_membership')),
    sa.UniqueConstraint('user_id', 'group_id', name=op.f('uq_membership_user_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('membership')
    op.drop_table('oauth2token')
    op.drop_table('oauth1token')
    op.drop_table('group')
    op.drop_table('enrollment')
    op.drop_table('account')
    op.drop_table('user')
    op.drop_table('last_sync')
    op.drop_table('id')
    op.drop_table('course')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
